// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.R;

public final class SecondMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton buttonSettings;

  @NonNull
  public final Button goToChatButton;

  @NonNull
  public final ImageView imageConnectionStatus;

  @NonNull
  public final LinearLayout layoutConnectionStatus;

  @NonNull
  public final TextView textConnectionStatus;

  @NonNull
  public final Toolbar toolbar;

  private SecondMainBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton buttonSettings,
      @NonNull Button goToChatButton, @NonNull ImageView imageConnectionStatus,
      @NonNull LinearLayout layoutConnectionStatus, @NonNull TextView textConnectionStatus,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonSettings = buttonSettings;
    this.goToChatButton = goToChatButton;
    this.imageConnectionStatus = imageConnectionStatus;
    this.layoutConnectionStatus = layoutConnectionStatus;
    this.textConnectionStatus = textConnectionStatus;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SecondMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SecondMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.second_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SecondMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSettings;
      ImageButton buttonSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonSettings == null) {
        break missingId;
      }

      id = R.id.goToChatButton;
      Button goToChatButton = ViewBindings.findChildViewById(rootView, id);
      if (goToChatButton == null) {
        break missingId;
      }

      id = R.id.imageConnectionStatus;
      ImageView imageConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (imageConnectionStatus == null) {
        break missingId;
      }

      id = R.id.layoutConnectionStatus;
      LinearLayout layoutConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (layoutConnectionStatus == null) {
        break missingId;
      }

      id = R.id.textConnectionStatus;
      TextView textConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (textConnectionStatus == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new SecondMainBinding((RelativeLayout) rootView, buttonSettings, goToChatButton,
          imageConnectionStatus, layoutConnectionStatus, textConnectionStatus, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
